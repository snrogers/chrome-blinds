{"version":3,"sources":["src/js/background.ts"],"names":[],"mappings":"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","file":"background.js","sourcesContent":["///**\n// * Created by user on 2/29/16.\n// */\n/// <reference path=\"../../typings/main.d.ts\"/>\n\nnamespace Background {\n\n    var windowConfig:{[windowId:number]:string};\n    var profiles:{[profileName:string]:Blinds.Profile};\n    var defaultProfileName:string;\n\n\n    /*\n     ************************************ INITIALIZER METHODS ************************************\n     */\n    function initData() {\n\n        function initProfiles(data:Blinds.IStorageData):Blinds.IStorageData|Q.Promise<Blinds.IStorageData> {\n            if (data.profiles) {\n                profiles = data.profiles;\n                console.log('Using Pre-existing Set of Profiles');\n                console.log(profiles);\n                return data;\n            } else {\n                profiles = Object.create(null);\t\t//  no default properties\n\n                //  Generate Example Profile\n                var exampleProfile = new Blinds.Profile('Example Profile');\n                exampleProfile.addItem('facebook.com');\n                exampleProfile.addItem('youtube.com');\n                exampleProfile.addItem('reddit.com');\n                profiles['Example Profile'] = exampleProfile;\n\n                //  Generate Unrestricted Profile\n                profiles['Unrestricted'] = new Blinds.Profile('Unrestricted');\n\n                var deferred = Q.defer();\n                chrome.storage.sync.set({profiles: profiles}, function () {\n                    console.log('New Set of Profiles Initialized');\n                    console.log(profiles);\n                    deferred.resolve(data);\n                });\n                return deferred.promise;\n            }\n        }\n\n        function initDefaultProfileName(data:Blinds.IStorageData):Blinds.IStorageData|Q.Promise<void> {\n            console.log('Setting defaultProfileName.');\n            if (data.defaultProfileName) {\n                defaultProfileName = data.defaultProfileName;\n                console.log('defaultProfileName found.');\n                return data;\n            } else {\n                var deferred = Q.defer();\n                defaultProfileName = 'Unrestricted';\n                chrome.storage.sync.set({defaultProfileName: defaultProfileName}, function () {\n                    deferred.resolve();\n                    console.log('defaultProfileName not found. Creating new defaultProfileName.');\n                });\n                return deferred.promise;\n            }\n        }\n\n        function initWindowConfig(data:Blinds.IStorageData):Blinds.IStorageData|Q.Promise<void> {\n            windowConfig = Object.create(null);\n            //\tWindowSettings are not preserved between runs\n            var deferred = Q.defer();\n            chrome.windows.getAll(function (windows) {\n                windows.forEach(function (window) {\n                    windowConfig[window.id] = defaultProfileName.slice(0);\t//\tTODO: Figure out if I actually need to copy\n                });\n\n                console.log('New Set of WindowSettings Initialized');\n                console.log(windowConfig);\n                deferred.resolve(data);\n            });\n            return deferred.promise;\n        }\n\n        console.log('==================INITIALIZING===================');\n        Blinds.Storage.getData()\n            .then(initProfiles)\n            .then(initDefaultProfileName)\n            .then(initWindowConfig)\n            .catch(function (e:Error) {\n                console.error(e);\n            }).finally(function () {\n            console.log('=================================================')\n        });\n    }\n\n    function initListeners() {\n        //  Listen for connections\n        chrome.runtime.onConnect.addListener(function (port) {\n            var isChanged:boolean;\n            port.onMessage.addListener(function (message: {isChanged:boolean}) {\n                if (message.isChanged) {\n                    isChanged = message.isChanged;\n                }\n            });\n\n            port.onDisconnect.addListener(function (event) {\n                if (isChanged) {\n                    console.warn('==== Refreshing Tab ====');\n                    var code = 'console.log(\\'reloading\\'); window.location.reload();';\n                    chrome.tabs.executeScript(Number(port.name), {code: code});\n                    console.warn(event);\n                    console.warn('======================');\n                } else {\n                    console.warn('Popup close without changing. No refresh.');\n                }\n            });\n            return true;\t//\tKeep listening forever\n        });\n\n        //  Listen for messages\n        chrome.runtime.onMessage.addListener(\n            function (request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n                switch (request.category) {\n                    case 'addSiteToProfile':\n                        addSiteToProfile(request, sender, sendResponse);\n                        break;\n                    case 'checkIfBlocked':\n                        checkIfBlocked(request, sender, sendResponse);\n                        break;\n                    case 'createProfile':\n                        createProfile(request, sender, sendResponse);\n                        break;\n                    case 'deleteProfile':\n                        deleteProfile(request, sender, sendResponse);\n                        break;\n                    case 'getProfiles':\n                        getProfiles(request, sender, sendResponse);\n                        break;\n                    case 'refreshTab':\n                        console.debug('Got a refreshTab request, calling the function now');\n                        refreshTab(request, sender, sendResponse);\n                        break;\n                    case 'removeSiteFromProfile':\n                        removeSiteFromProfile(request, sender, sendResponse);\n                        break;\n                    case 'setActiveProfile':\n                        setActiveProfile(request, sender, sendResponse);\n                        break;\n                    case 'setProfile':\n                        saveProfile(request, sender, sendResponse);\n                        break;\n                    case 'setDefaultProfile':\n                        setDefaultProfile(request, sender, sendResponse);\n                        break;\n                    default:\n                        console.error('==== MALFORMED MESSAGE ====');\n                        console.error('== Request ==');\n                        console.error(request);\n                        console.error('== Sender ==');\n                        console.error(sender);\n                        console.error('===========================');\n                        break;\n                }\n                return true;\t//\tKeep listening forever\n            });\n\n\n        //\tListen for new windows\n        chrome.windows.onCreated.addListener(function (window) {\n            Blinds.debug('== Window Created ==');\n            Blinds.debug(window);\n            Blinds.debug('====================');\n\n            windowConfig[window.id] = defaultProfileName;\n        });\n\n        //\tListen for removed windows\n        chrome.windows.onRemoved.addListener(function (windowId) {\n            delete windowConfig[windowId];\n        });\n    }\n\n    /**\n     ************************************ CALLBACK HANDLER METHODS ************************************\n     */\n\n    /**\n     * Add a domain to a profile\n     * @param {Blinds.IRequest} request\n     * @param {chrome.runtime.MessageSender} sender\n     * @param {Blinds.IResponse} sendResponse\n     * @private\n     */\n    function addSiteToProfile(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n        //TODO: REFACTOR ME\n\n\n        function getUrlFromTab(tab:chrome.tabs.Tab) {\n            return tab.url;\n        }\n\n        function addSiteToProfle(url:string) {\n            var domain = Blinds.extractRootDomain(url);\n            Blinds.debug('domain: ' + domain);\n\n            var profile = profiles[request.data.profileName];\n            profile.items.push(domain);\n\n            return Blinds.Storage.setData({profiles: profiles});\n        }\n\n        if (request.data.profileName == 'Unrestricted') {\n            sendResponse({\n                category: 'addSiteToProfle',\n                isSuccessful: false,\n                data: {\n                    errorMessage: new Error('Cannot add item to blacklist: Unrestricted').message\n                }\n            });\n            return;\n        }\n\n        Blinds.getActiveTab()\n            .then(getUrlFromTab)\n            .then(addSiteToProfle)\n            .then(function () {\n                sendResponse({category: 'addSiteToProfle', isSuccessful: true, data: {}});\n            }, function (e:Error) {\n                console.error(e);\n                sendResponse({category: 'addSiteToProfle', isSuccessful: false, data: {errorMessage: e.message}});\n            });\n    }\n\n    /**\n     * Determine whether a URL should be blocked\n     * @param {Blinds.IRequest} request\n     * @param {chrome.runtime.MessageSender} sender\n     * @param {Blinds.IResponse} sendResponse\n     * @private\n     */\n    function checkIfBlocked(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n\n        var promise = new Q.Promise(function (resolve, reject) {\n\n            //  Content script does not include windowId, but PopUp does\n            var windowId = request.data.windowId ? request.data.windowId : sender.tab.windowId;\n\n            var profileName = windowConfig[windowId];\n            if (profileName === 'Unrestricted') {   //  TODO: make a Unrestricted object so that I don't need this check\n                resolve(false);\n                return;\n            } else {\n                profiles[profileName].items.forEach(function (domain) {\n                    if (request.data.url.match(new RegExp(domain))) {\n                        resolve(true);\n                        return;\n                    }\n                });\n                resolve(false);\n            }\n        }).then(function (isBlocked:boolean) {\n            Blinds.debug(request.data.url + (isBlocked ? ' is blocked.' : ' not blocked'));\n            sendResponse({category: 'checkIfBlocked', isSuccessful: true, data: {isBlocked: isBlocked}});\n        }, function (e:Error) {\n            console.error(e);\n            sendResponse({category: 'checkIfBlocked', isSuccessful: false, data: {errorMessage: e.message}});\n        });\n    }\n\n    /**\n     * Creates a new blacklist\n     * @param {Blinds.IRequest} request\n     * @param {chrome.runtime.MessageSender} sender\n     * @param {Blinds.IResponse} sendResponse\n     * @private\n     */\n    function createProfile(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n\n        Q.fcall(function () {\n                if (Object.hasOwnProperty.call(profiles, request.data.profileName)) {\n                    throw new Error('Profile name already exists.');\n                }\n                profiles[request.data.profileName] = new Blinds.Profile(request.data.profileName);\n                return;\n            })\n            .then(function () {\n                return Blinds.Storage.setData(profiles);\n            }) //  TODO: The return value of setData is causing trouble\n            .then(function () {\n                sendResponse({\n                    category: 'createProfile',\n                    isSuccessful: true,\n                    data: {profileName: request.data.profileName}\n                });\n            }, function (e:Error) {\n                console.error(e);\n                sendResponse({category: 'createProfile', isSuccessful: false, data: {errorMessage: e.message}});\n\n            });\n    }\n\n    /**\n     * Deletes a profile\n     * @param {Blinds.IRequest} request\n     * @param {chrome.runtime.MessageSender} sender\n     * @param {Blinds.IResponse} sendResponse\n     * @private\n     */\n    function deleteProfile(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n        var profileName = request.data.profileName;\n\n        Q.fcall(function () {\n                if (profileName === 'Unrestricted') {\n                    throw new Error('Cannot delete \\'Unrestricted\\' profile.');\n                }\n\n                delete profiles[profileName];\n\n                if (defaultProfileName === profileName) defaultProfileName === 'Unrestricted';\n\n                for (var windowId in windowConfig) {\n                    if (Object.hasOwnProperty.call(windowConfig, windowId)) {\n                        if (windowConfig[windowId] === profileName) {\n                            windowConfig[windowId] = defaultProfileName;\n                        }\n                    }\n                }\n\n                Blinds.debug(profileName + ' deleted');\n            })\n            .then(function () {\n                return Blinds.Storage.setData({profiles: profiles});\n            })\n            .then(function () {\n                sendResponse({category: 'deleteProfile', isSuccessful: true, data: {profileName: profileName}});\n            }, function (e:Error) {\n                console.error(e);\n                sendResponse({category: 'deleteProfile', isSuccessful: false, data: {errorMessage: e.message}});\n            });\n    }\n\n    /**\n     * Returns a message containing all profiles and profile info\n     * @param {Blinds.IRequest} request\n     * @param {chrome.runtime.MessageSender} sender\n     * @param {Blinds.IResponse} sendResponse\n     * @private\n     */\n    function getProfiles(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n\n\n        Blinds.getActiveTab()\n            .then(function (tab) {\n                sendResponse({\n                    category: 'getProfiles',\n                    isSuccessful: true,\n                    data: {\n                        activeProfileName: windowConfig[tab.windowId],\n                        defaultProfileName: defaultProfileName,\n                        profiles: profiles,\n                    }\n                });\n            })\n            .catch(function (error) {\n                console.error('getProfiles', error);\n                sendResponse({category: 'getProfiles', isSuccessful: false, data: {errorMessage: e.message}});\n            });\n    }\n\n    function refreshTab(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n        Blinds.debug('refreshing tab:[' + request.data.tabId + ']');\n        var code = 'console.log(\\'reloading\\'); window.location.reload();';\n        chrome.tabs.executeScript(request.data.tabId, {code: code});\n    }\n\n    function removeSiteFromProfile(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n        // //  Content script does not include windowId, but PopUp does\n        // var windowId = request.data.windowId ? request.data.windowId : sender.tab.windowId;\n\n        var profileName = request.data.profileName;\n\n        var promise = new Q.Promise(function (resolve, reject) {\n            if (profileName === 'Unrestricted') {   //  TODO: make a Unrestricted object so that I don't need this check\n                throw 'Cannot modify Unrestricted Profile';\n            } else {\n                profiles[profileName].items.forEach(function (item) {\n                    if (request.data.url.match(new RegExp(item))) {\n                        Blinds.debug('match found: ' + item);\n                        resolve(item);\n                        return;\n                    }\n                });\n                throw 'Cannot find blocking profile item';\n            }\n        }).then(function (item:string) {\n            Blinds.debug('matched item: ' + item);\n            var profile = profiles[profileName];\n            Blinds.debug('profile before removal:');\n            Blinds.debug(profile);\n            profile.items.splice(profile.items.indexOf(item), 1);\n            Blinds.debug('profile after removal:');\n            Blinds.debug(profile);\n            return Blinds.Storage.setData({profiles: profiles});\n        }).then(function () {\n            sendResponse({category: 'removeSiteFromProfile', isSuccessful: true, data: {}});\n        }, function (e:Error) {\n            console.error(e);\n            Blinds.debug('==== Request ====');\n            Blinds.debug(request);\n            Blinds.debug('=================');\n            sendResponse({category: 'removeSiteFromProfile', isSuccessful: false, data: {errorMessage: e.message}});\n        });\n    }\n\n    /**\n     * Sets a window's activeProfile. Assumes the sender is a tab (i.e. content script)\n     * @param {Blinds.IRequest} request\n     * @param {chrome.runtime.MessageSender} sender\n     * @param {Blinds.IResponse} sendResponse\n     * @private\n     */\n    function setActiveProfile(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n\n\n        Blinds.getActiveTab()\n            .then(function (tab:chrome.tabs.Tab) {\n                windowConfig[tab.windowId] = request.data.profileName;\n                return tab;\n            })\n            .then(function (tab:chrome.tabs.Tab) {\n                Blinds.debug('Window:[' + tab.windowId + '] set to blacklist:' + request.data.profileName);\n                sendResponse({\n                    category: 'setActiveProfile',\n                    isSuccessful: true,\n                    data: {activeProfileName: request.data.profileName}\n                })\n            }, function (e:Error) {\n                console.error(e);\n                sendResponse({category: 'setActiveProfile', isSuccessful: false, data: {errorMessage: e.message}});\n            });\n    }\n\n    /**\n     * Saves a profile. Sent by Options.js\n     * @param {Blinds.IRequest} request\n     * @param {chrome.runtime.MessageSender} sender\n     * @param {Blinds.IResponse} sendResponse\n     * @private\n     */\n    function saveProfile(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n        var profilePropName = request.data.profileName;\n        profiles[profilePropName] = request.data.profile;\n\n        Blinds.Storage.setData({profiles: profiles})\n            .then(function () {\n                sendResponse({category: 'saveProfile', isSuccessful: true, data: {}});\n            }, function (e:Error) {\n                console.error(e);\n                sendResponse({category: 'saveProfile', isSuccessful: false, data: {errorMessage: e.message}});\n            });\n    }\n\n    /**\n     * Sets default blacklist\n     * @param {Blinds.IRequest} request\n     * @param {chrome.runtime.MessageSender} sender\n     * @param {Blinds.IResponse} sendResponse\n     * @private\n     */\n    function setDefaultProfile(request:Blinds.IRequest, sender:chrome.runtime.MessageSender, sendResponse:(response:Blinds.IResponse) => any) {\n        defaultProfileName = request.data.profileName;\n\n        Blinds.Storage.setData({defaultProfileName: defaultProfileName})\n            .then(function () {\n                Blinds.debug('defaultProfile set to: ' + defaultProfileName);\n                sendResponse({\n                    category: 'setDefaultProfile',\n                    isSuccessful: true,\n                    data: {defaultProfileName: defaultProfileName}\n                });\n            }, function (e:Error) {\n                console.error(e);\n                sendResponse({category: 'setDefaultProfile', isSuccessful: false, data: {errorMessage: e.message}});\n            });\n    }\n\n    /**\n     ************************************ INITIALIZE ************************************\n     */\n    (function () {\n        initData();\n        initListeners();\n\n    })();\n}"],"sourceRoot":"/source/"}