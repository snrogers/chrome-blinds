{"version":3,"sources":["src/js/blinds.ts"],"names":[],"mappings":"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","file":"blinds.js","sourcesContent":["/// <reference path=\"../../typings/main.d.ts\" />\n\nnamespace Blinds {\n    //  ======== Variables ========\n    export var _isDebugging = true;\n    export var extensionId = chrome.runtime.id;\n\n    export var HtmlBlock= (function(){\n\n        var htmlString =\n                '<div id=\"getBackToWork\" style=\"z-index:999999999999999; width: 100%; height: 100%; position: fixed;\">' +\n                '<img id=\"blockImage\" src=\"chrome-extension://' + extensionId + '/img/shutter.jpg\" style=\"transform: translateY(-100%); transition: transform 3s linear; width: 100%;\"/>' +\n                '</div>'\n            ;\n\n        return htmlString;\n    })();\n\n    export var PhysicsBlock = null;\n\n    //  ======== Functions ====\n    //  == Logging ======\n    export function debug(something:any) {\n        if (_isDebugging) chrome.extension.getBackgroundPage().console.debug(something);\n    }\n\n    export function log(something:any) {\n        chrome.extension.getBackgroundPage().console.log(something);\n    }\n\n    export function error(location:string, errorMessage:string) {\n        chrome.extension.getBackgroundPage().console.error({\n            location: location,\n            errorMessage: errorMessage\n        });\n    }\n\n    export function warn(something:any) {\n        chrome.extension.getBackgroundPage().console.warn(something);\n    }\n\n    /*\n     ************************************ UTILITY METHODS ************************************\n     */\n    export function extractSubdomain(url:string):string {\n        url = url.slice(0);\t\t\t\t\t\t\t\t//  Copy url TODO: Eliminate this step?\n        url = url.slice(url.indexOf('/') + 2);\t\t\t//  Strip protocol\n        url = url.slice(0, url.indexOf('/'));\n        return url;                                     //  Strip stem/query and return\n    }\n\n    export function extractRootDomain(url:string):string {\n        var subdomain = Blinds.extractSubdomain(url);\n        var numDots = subdomain.match(/\\./g).length;\n        for (var i = 1; i < numDots; i++) {\t            //  strip subdomains\n            subdomain = subdomain.slice(subdomain.indexOf('.') + 1);\n        }\n        return subdomain;\n    }\n\n    export function getActiveTab():Q.Promise<chrome.tabs.Tab> {\n        var deferred = Q.defer();\n        chrome.tabs.query({active: true, currentWindow: true}, function (tabs:chrome.tabs.Tab[]) {\n            if (tabs[0]) {\n                deferred.resolve(tabs[0]);\n            } else {\n                console.error(tabs);\n                deferred.reject('No Tabs found');\n            }\n        });\n        return deferred.promise;\n    }\n\n    export function getActiveWindow():Q.Promise<chrome.windows.Window> {\n        var deferred = Q.defer();\n        deferred.reject(new Error('Unimplemented Method'));\n        return deferred.promise;\n    }\n\n    export function parseProfile(profileString:string):string[] {\n        return profileString.split('\\n');\n    }\n\n    export function sendMessage(message):Q.Promise<IResponse> {\n        var deferred = Q.defer();\n        chrome.runtime.sendMessage(message, function (response:Blinds.IResponse) {\n            if (response.isSuccessful) {\n                deferred.resolve(response);\n            } else {\n                deferred.reject(response);\n            }\n        });\n        return deferred.promise;\n    }\n\n\n    /*\n     ************************************ Interfaces ************************************\n     */\n\n    export interface IErrorLog {\n        location:string\n        exception:string\n    }\n\n    export interface IStorageData {\n        defaultProfileName?:string;\n        profiles?:{[profileName:string]:Profile};\n    }\n\n    export interface IRequest {\n        category:string;\n        data:{\n            profileName?:string,\n            profileItem?:string,\n            profile?:Profile,\n            tabId?:number,\n            url?:string,\n            windowId?:number\n        };\n    }\n\n    export interface IResponse {\n        category:string;\n        isSuccessful:boolean;\n\n        data:{\n            activeProfileName?:string,\n            defaultProfileName?:string,\n            errorMessage?:string, //  Error-type loses its properties during transmission, so just send the message\n            isBlocked?:boolean,\n            profiles?:{[profileName:string]:Profile },\n            profileName?:string\n        };\n    }\n\n\n//  ==== Classes =====\n//  TODO: Figure out if TS has a better way to make an empty object\n    var WindowConfig = (function () {\n\n        WindowConfig.prototype = null;\n\n        function WindowConfig() {\n\n        }\n\n        return WindowConfig;\n    })();\n\n    export class Profile {\n\n        displayName:string;\n        items:string[];\n\n        constructor(displayName:string) {\n            this.displayName = displayName;\n\n            this.items = [];\n        }\n\n        public addItem(item:string) {   //  TODO: Maybe I should remove this? It's unnecessary since items is public now\n            this.items.push(item);\n        }\n    }\n\n    export class Storage {\n\n        /***\n         * Returns a Promise containing the specified data in chrome.storage.sync\n         * @param {string=} data\n         * @returns {Promise<IStorageData>}\n         */\n        public static getData(data?:string):Q.Promise<IStorageData> {\n            var deferred = Q.defer();\n            chrome.storage.sync.get(null, function (items) {\n                deferred.resolve(data ? items[data] : items);\n            });\n            return deferred.promise;\n        }\n\n        /***\n         * Sets value(s) in chrome.storage.sync, returns a promise\n         * @param {Object} object\n         * @returns {Promise}\n         */\n        public static setData(object:IStorageData):Q.Promise<any> { //  TODO: I can't make this return void because it returns {}\n            var deferred = Q.defer();\n            chrome.storage.sync.set(object, function () {\n                deferred.resolve();\n            });\n            return deferred.promise;\n        }\n    }\n}"],"sourceRoot":"/source/"}