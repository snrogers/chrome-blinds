{"version":3,"sources":["src/js/options.ts"],"names":[],"mappings":"AAAA;IAOI,kBAAY,SAAgB;QACxB,IAAI,CAAC,QAAQ,GAAuB,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACvE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;IAEO,wBAAK,GAAb;QACI,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAE,CAAC;YACnC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;IAEO,yBAAM,GAAd;QACI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAChD,CAAC;IACL,CAAC;IAEO,0BAAO,GAAf;QACI,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,EAAE,CAAC;IAClB,CAAC;IAEM,sBAAG,GAAV,UAAW,MAAwB;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEM,mCAAgB,GAAvB,UAAwB,KAAY,EAAE,QAAsB;QACxD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACpD,CAAC;IAEM,4BAAS,GAAhB,UAAiB,IAAW;QACxB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,6BAAU,GAAjB,UAAkB,KAAY;QAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,CAAC;QACL,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,wBAAK,GAAZ;QACI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEM,yBAAM,GAAb,UAAc,MAAwB;QAClC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEM,+BAAY,GAAnB,UAAoB,IAAW;QAC3B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,CAAC,EAAE,CAAC;YACR,CAAC;QACL,CAAC;QACD,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAEM,gCAAa,GAApB,UAAqB,KAAY;QAC7B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,CAAC,EAAE,CAAC;YACR,CAAC;QACL,CAAC;QACD,IAAI,CAAC,OAAO,EAAE,CAAC;IACnB,CAAC;IAED,sBAAI,kCAAY;aAAhB;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC9B,CAAC;;;OAAA;IAED,sBAAI,mCAAa;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;QAC/B,CAAC;aAUD,UAAkB,aAA+B;YAC7C,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACxC,CAAC;;;OAZA;IAED,sBAAI,0BAAI;aAAR;YACI,MAAM,CAAqB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAE,CAAC,IAAI,CAAC;QACzF,CAAC;;;OAAA;IAED,sBAAI,2BAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC/B,CAAC;;;OAAA;IAKL,eAAC;AAAD,CA3GA,AA2GC,IAAA;AAED,IAAU,OAAO,CA+QhB;AA/QD,WAAU,OAAO,EAAC,CAAC;IACf,IAAI,sBAAwC,CAAC;IAC7C,IAAI,iBAAmC,CAAC;IAExC,IAAI,QAA8C,CAAC;IACnD,IAAI,kBAAyB,CAAC;IAE9B,IAAI,OAAO,GAAO,EAAE,CAAC;IACrB,IAAI,SAAS,GAAU,IAAI,CAAC;IAG5B,IAAI,eAAwB,CAAC;IAM7B;QACI,2BAA2B,QAAyB;YAGhD,sBAAsB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC1D,sBAAsB,CAAC,IAAI,GAAG,0BAA0B,CAAC;YACzD,sBAAsB,CAAC,KAAK,GAAG,oBAAoB,CAAC;YACpD,eAAe,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;YAE5C,GAAG,CAAC,CAAC,IAAI,WAAW,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC7C,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAC9C,MAAM,CAAC,KAAK,GAAG,WAAW,CAAC;gBAC3B,MAAM,CAAC,IAAI,GAAG,WAAW,CAAC;gBAE1B,EAAE,CAAC,CAAC,WAAW,KAAK,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;oBAClD,MAAM,CAAC,IAAI,GAAG,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC;oBACxC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAC3B,CAAC;gBAED,EAAE,CAAC,CAAC,WAAW,KAAK,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;oBACnD,MAAM,CAAC,IAAI,GAAG,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC;oBACzC,eAAe,CAAC,aAAa,GAAG,MAAM,CAAC;gBAC3C,CAAC;gBAED,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YAChC,CAAC;YACD,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC;QAED,MAAM,CAAC,WAAW,CAAC,EAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,EAAE,EAAE,EAAC,CAAC;aAClD,IAAI,CAAC,UAAU,QAAyB;YACrC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC;YAClC,kBAAkB,GAAG,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC;YAEtD,MAAM,CAAC,QAAQ,CAAC;QACpB,CAAC,CAAC;aACD,IAAI,CAAC,iBAAiB,CAAC;aACvB,IAAI,CAAC,UAAU,QAAyB;YACrC,aAAa,EAAE,CAAC;QACpB,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,CAAO;YACpB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACX,CAAC;IAED;QAEI,eAAe,CAAC,gBAAgB,CAAC,QAAQ,EAAE,aAAa,CAAC,CAAC;QAK1D,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QAGtE,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC;QAGtE,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QAGlE,OAAO,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,OAAO,EAAE,iBAAiB,CAAC,CAAC;IAElF,CAAC;IAED;QACI,eAAe,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC;QAEhD,OAAO,CAAC,MAAM,GAAG;YACb,aAAa,EAAsB,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC;YACjF,aAAa,EAAsB,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC;YACjF,WAAW,EAAsB,QAAQ,CAAC,cAAc,CAAC,mBAAmB,CAAC;YAC7E,iBAAiB,EAAsB,QAAQ,CAAC,cAAc,CAAC,yBAAyB,CAAC;SAC5F,CAAC;QACF,OAAO,CAAC,GAAG,GAAG;YACV,UAAU,EAAmB,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC;YACrE,aAAa,EAAmB,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC;SAC9E,CAAC;QACF,OAAO,CAAC,KAAK,GAAG;YACZ,cAAc,EAAqB,QAAQ,CAAC,cAAc,CAAC,qBAAqB,CAAC;SACpF,CAAC;QACF,OAAO,CAAC,QAAQ,GAAG;YACf,OAAO,EAAwB,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC;SAC5E,CAAC;QAEF,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAWD;QACI,MAAM,CAAC,WAAW,CAAC;YACX,QAAQ,EAAE,eAAe;YACzB,IAAI,EAAE,EAAC,WAAW,EAAE,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,EAAC;SAC1D,CAAC;aACD,IAAI,CAAC,UAAU,QAAyB;YAErC,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACrD,aAAa,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;YAChD,aAAa,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC;YAC/C,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC9B,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YASnC,aAAa,EAAE,CAAC;YAEhB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,GAAG,EAAE,CAAC;YAExC,WAAW,CAAC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,QAAyB;YACtC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACrE,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACX,CAAC;IAED;QACI,MAAM,CAAC,WAAW,CAAC;YACX,QAAQ,EAAE,eAAe;YACzB,IAAI,EAAE;gBACF,WAAW,EAAE,eAAe,CAAC,KAAK;aACrC;SACJ,CAAC;aACD,IAAI,CAAC,UAAU,QAAyB;YACrC,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YACzD,aAAa,EAAE,CAAC;YAChB,WAAW,CAAC,KAAK,CAAC,YAAY,GAAG,QAAQ,CAAC,IAAI,CAAC,WAAW,GAAG,YAAY,EAAE,SAAS,CAAC,CAAC;QAC1F,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,QAAyB;YACtC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACrE,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACX,CAAC;IAKD,qBAAqB,WAAkB;QAEnC,EAAE,CAAC,CAAC,WAAW,IAAI,oBAAoB,CAAC;YAAC,MAAM,CAAC;QAGhD,IAAI,aAAa,GAAG,EAAE,CAAC;QAGvB,MAAM,CAAC,WAAW,CAAC;YACf,QAAQ,EAAE,aAAa;YACvB,IAAI,EAAE,EAAE;SACX,CAAC,CAAC,IAAI,CAAC,UAAU,QAAyB;YACnC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,IAAW;gBACnE,aAAa,IAAI,IAAI,GAAG,IAAI,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC;QACnD,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,QAAyB;YACtC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACrE,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACX,CAAC;IAED;QACI,IAAI,WAAW,GAAG,eAAe,CAAC,KAAK,CAAC;QACxC,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAC9C,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEpE,MAAM,CAAC,WAAW,CAAC;YACX,QAAQ,EAAE,YAAY;YACtB,IAAI,EAAE;gBACF,WAAW,EAAE,WAAW;gBACxB,OAAO,EAAE,OAAO;aACnB;SACJ,CAAC;aACD,IAAI,CAAC;YACF,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC3C,CAAC,CAAC;aACD,KAAK,CAAC,UAAU,QAAyB;YACtC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACrE,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACX,CAAC;IAED;QACI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,EAAE,CAAC,CAAC,eAAe,CAAC,KAAK,KAAK,oBAAoB,CAAC,CAAC,CAAC;YACjD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;YAC9C,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;YACzC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,+BAA+B,CAAC;YACjE,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACnD,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;YAE5C,EAAE,CAAC,CAAC,eAAe,CAAC,KAAK,KAAK,cAAc,CAAC,CAAC,CAAC;gBAC3C,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACzC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACnD,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;gBAC7D,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,0CAA0C,CAAC;YAChF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBACnC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAC1C,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;gBAChE,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACpD,CAAC;QACL,CAAC;IACL,CAAC;IAED;QACI,IAAI,wBAAwB,GAAG,eAAe,CAAC,aAAa,CAAC;QAE7D,MAAM,CAAC,WAAW,CAAC;YACf,QAAQ,EAAE,mBAAmB;YAC7B,IAAI,EAAE;gBACF,WAAW,EAAE,eAAe,CAAC,KAAK;aACrC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAU,QAAyB;YACvC,IAAI,uBAAuB,GAAG,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAC3F,uBAAuB,CAAC,IAAI,GAAG,YAAY,GAAG,uBAAuB,CAAC,IAAI,CAAC;YAC3E,eAAe,CAAC,aAAa,GAAG,uBAAuB,CAAC;YAExD,wBAAwB,CAAC,IAAI,GAAG,wBAAwB,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;YAExF,WAAW,CAAC,KAAK,CAAC,sBAAsB,EAAE,SAAS,CAAC,CAAC;QACzD,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,QAAyB;YACxC,WAAW,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,IAAI,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;YACrE,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAMD,CAAC;QACG,YAAY,EAAE,CAAC;QAEf,QAAQ,EAAE,CAAC;QAEX,oBAAoB,EAAE,CAAC;IAE3B,CAAC,CAAC,EAAE,CAAC;AACT,CAAC,EA/QS,OAAO,KAAP,OAAO,QA+QhB","file":"options.js","sourcesContent":["class Selector {\n\n    private _element:HTMLSelectElement;\n    private _options:HTMLOptionElement[];\n    private _activeOption:HTMLOptionElement;\n    private _defaultOption:HTMLOptionElement;\n\n    constructor(elementId:string) {\n        this._element = <HTMLSelectElement> document.getElementById(elementId);\n        this._options = [];\n    }\n\n    private clear() {\n        while (this._element.hasChildNodes()) {\n            this._element.removeChild(this._element.firstChild);\n        }\n    }\n\n    private render() {\n        for (let i = 0; i < this._options.length; i++) {\n            this._element.appendChild(this._options[i]);\n        }\n    }\n\n    private refresh() {\n        this.clear();\n        this.render();\n    }\n\n    public add(option:HTMLOptionElement) {\n        this._options.push(option);\n        this.refresh();\n    }\n\n    public addEventListener(event:string, callback:EventListener) {\n        this._element.addEventListener(event, callback);\n    }\n\n    public getByText(text:string) {\n        for (let i = 0; i < this._options.length; i++) {\n            if (this._options[i].text === text) {\n                return this._options[i];\n            }\n        }\n        return null;\n    }\n\n    public getByValue(value:string) {\n        for (let i = 0; i < this._options.length; i++) {\n            if (this._options[i].value === value) {\n                return this._options[i];\n            }\n        }\n        return null;\n    }\n\n    public empty() {\n        this._options = [];\n        this.refresh();\n    }\n\n    public remove(option:HTMLOptionElement) {\n        this._options.splice(this._options.indexOf(option), 1);\n        this.refresh();\n    }\n\n    public removeByText(text:string) {\n        for (let i = 0; i < this._options.length; null) {\n            if (this._options[i].text == text) {\n                this._options.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        this.refresh();\n    }\n\n    public removeByValue(value:string) {\n        for (let i = 0; i < this._options.length; null) {\n            if (this._options[i].value == value) {\n                this._options.splice(i, 1);\n            } else {\n                i++;\n            }\n        }\n        this.refresh();\n    }\n\n    get activeOption() {\n        return this._activeOption;\n    }\n\n    get defaultOption() {\n        return this._defaultOption;\n    }\n\n    get text() {\n        return (<HTMLOptionElement>this._element.children[this._element.selectedIndex]).text;\n    }\n\n    get value() {\n        return this._element.value;\n    }\n\n    set defaultOption(defaultOption:HTMLOptionElement) {\n        this._defaultOption = defaultOption;\n    }\n}\n\nnamespace Options {\n    var optionCreateNewProfile:HTMLOptionElement;\n    var optionNoneProfile:HTMLOptionElement;\n\n    var profiles:{[profileName:string]:Blinds.Profile};\n    var defaultProfileName:string;\n\n    var element:any = {};\n    var toastTime:number = 2000;\n\n    //var defaultprofileSelector: Selector;\n    var profileSelector:Selector;\n\n\n    /*\n     ************************************ INITIALIZATION METHODS ************************************\n     */\n    function initData() {\n        function initSelectProfile(response:Blinds.IResponse) {\n            //profileSelector = new Selector('selectProfile');\n\n            optionCreateNewProfile = document.createElement('option');\n            optionCreateNewProfile.text = '-- Create New Profile --';\n            optionCreateNewProfile.value = '\\nCreateNewProfile';\n            profileSelector.add(optionCreateNewProfile);\n\n            for (var profileName in response.data.profiles) {\t\t\t\t\t\t\t\t//\tIterate over profiles\n                var option = document.createElement('option');\n                option.value = profileName;\n                option.text = profileName;\n\n                if (profileName === response.data.activeProfileName) {\n                    option.text = '(Active) ' + option.text;\n                    option.selected = true;\n                }\n\n                if (profileName === response.data.defaultProfileName) {\n                    option.text = '(Default) ' + option.text;\n                    profileSelector.defaultOption = option;\n                }\n\n                profileSelector.add(option);\n            }\n            return response;\n        }\n\n        Blinds.sendMessage({category: 'getProfiles', data: {}})\n            .then(function (response:Blinds.IResponse) {\n                profiles = response.data.profiles;\n                defaultProfileName = response.data.defaultProfileName;\n\n                return response;\n            })\n            .then(initSelectProfile)\n            .then(function (response:Blinds.IResponse) {\n                selectProfile();    //  Initializes the color/message if 'Unrestricted' is selected\n            })\n            .catch(function (e:Error) {\n                console.error(e);\n            });\n    }\n\n    function initElementListeners() {\n        //\tSelect Profile\n        profileSelector.addEventListener('change', selectProfile);\n\n\n        //\t==== Buttons ====\n        //\tCreate Profile\n        element.button.createProfile.addEventListener('click', createProfile);\n\n        //\tDeleteProfile\n        element.button.deleteProfile.addEventListener('click', deleteProfile);\n\n        //\tSaveProfile\n        element.button.saveProfile.addEventListener('click', saveProfile);\n\n        //\tSet DefaultProfile\n        element.button.setDefaultProfile.addEventListener('click', setDefaultProfile);\n\n    }\n\n    function initElements() {\n        profileSelector = new Selector('selectProfile');\n\n        element.button = {\n            createProfile: <HTMLButtonElement> document.getElementById('buttonCreateProfile'),\n            deleteProfile: <HTMLButtonElement> document.getElementById('buttonDeleteProfile'),\n            saveProfile: <HTMLButtonElement> document.getElementById('buttonSaveProfile'),\n            setDefaultProfile: <HTMLButtonElement> document.getElementById('buttonSetDefaultProfile')\n        };\n        element.div = {\n            newProfile: <HTMLDivElement> document.getElementById('divNewProfile'),\n            selectProfile: <HTMLDivElement> document.getElementById('divSelectProfile')\n        };\n        element.input = {\n            newProfileName: <HTMLInputElement> document.getElementById('inputNewProfileName')\n        };\n        element.textArea = {\n            profile: <HTMLTextAreaElement> document.getElementById('textAreaProfile')\n        };\n\n        Object.freeze(element);\n    }\n\n    /*\n     ************************************ UTILITY METHODS ************************************\n     */\n\n\n    /*\n     ************************************ ACTION METHODS ************************************\n     */\n\n    function createProfile() {\n        Blinds.sendMessage({\n                category: 'createProfile',\n                data: {profileName: element.input.newProfileName.value}\n            })\n            .then(function (response:Blinds.IResponse) {\n                //  Add to profileSelector\n                var optionProfile = document.createElement('option');\n                optionProfile.value = response.data.profileName;\n                optionProfile.text = response.data.profileName;\n                optionProfile.selected = true;\n                profileSelector.add(optionProfile);\n\n                // //  Add to selectDefaultProfile\n                // optionProfile = document.createElement('option');\n                // optionProfile.value = response.data.profileName;\n                // optionProfile.text = response.data.profileName;\n                // element.select.defaultProfile.appendChild(optionProfile);\n\n\n                selectProfile();\n\n                element.input.newProfileName.value = '';\n\n                Materialize.toast('Profile Created', 1000);\n            })\n            .catch(function (response:Blinds.IResponse) {\n                Materialize.toast('ERROR: ' + response.data.errorMessage, toastTime);\n                console.error(response);\n            });\n    }\n\n    function deleteProfile() {\n        Blinds.sendMessage({\n                category: 'deleteProfile',\n                data: {\n                    profileName: profileSelector.value\n                }\n            })\n            .then(function (response:Blinds.IResponse) {\n                profileSelector.removeByValue(response.data.profileName);\n                selectProfile();\n                Materialize.toast('Profile \\'' + response.data.profileName + '\\' Deleted', toastTime);\n            })\n            .catch(function (response:Blinds.IResponse) {\n                Materialize.toast('ERROR: ' + response.data.errorMessage, toastTime);\n                console.error(response);\n            });\n    }\n\n    /**\n     * Loads blacklist into the textarea\n     */\n    function loadProfile(profileName:string) {\n\n        if (profileName == '\\nCreateNewProfile') return; //\tBail if you try to load the create option\n\n        //\tLoad default blacklist into\n        var profileString = '';\n\n\n        Blinds.sendMessage({\n            category: 'getProfiles',\n            data: {}\n        }).then(function (response:Blinds.IResponse) {\n                response.data.profiles[profileName].items.forEach(function (item:string) {\n                    profileString += item + '\\n';\n                });\n\n                element.textArea.profile.value = profileString;\n            })\n            .catch(function (response:Blinds.IResponse) {\n                Materialize.toast('ERROR: ' + response.data.errorMessage, toastTime);\n                console.error(response);\n            });\n    }\n\n    function saveProfile() {\n        var profileName = profileSelector.value;\n        var profile = new Blinds.Profile(profileName);\n        profile.items = Blinds.parseProfile(element.textArea.profile.value);\n\n        Blinds.sendMessage({\n                category: 'setProfile',\n                data: {\n                    profileName: profileName,\n                    profile: profile\n                }\n            })\n            .then(function () {\n                Materialize.toast('Saved!', toastTime);\n            })\n            .catch(function (response:Blinds.IResponse) {\n                Materialize.toast('ERROR: ' + response.data.errorMessage, toastTime);\n                console.error(response);\n            });\n    }\n\n    function selectProfile() {\n        console.log(element);\n        if (profileSelector.value === '\\nCreateNewProfile') {\n            element.div.newProfile.style.height = \"120px\";\n            element.textArea.profile.disabled = true;\n            element.textArea.profile.value = 'Select or Create a Black List';\n            element.textArea.profile.classList.remove('white');\n            element.textArea.profile.classList.add('amber', 'lighten-4');\n        } else {\n            element.div.newProfile.style.height = \"0px\";\n\n            if (profileSelector.value === 'Unrestricted') {\n                element.textArea.profile.disabled = true;\n                element.textArea.profile.classList.remove('white');\n                element.textArea.profile.classList.add('amber', 'lighten-4');\n                element.textArea.profile.value = 'THIS PROFILE CANNOT BE EDITED OR DELETED';\n            } else {\n                loadProfile(profileSelector.value);\n                element.textArea.profile.disabled = false;\n                element.textArea.profile.classList.remove('amber', 'lighten-4');\n                element.textArea.profile.classList.add('white');\n            }\n        }\n    }\n\n    function setDefaultProfile() {\n        var prevDefaultProfileOption = profileSelector.defaultOption;\n\n        Blinds.sendMessage({\n            category: 'setDefaultProfile',\n            data: {\n                profileName: profileSelector.value\n            }\n        }).then(function (response:Blinds.IResponse) {\n            var newDefaultProfileOption = profileSelector.getByValue(response.data.defaultProfileName);\n            newDefaultProfileOption.text = '(Default) ' + newDefaultProfileOption.text;\n            profileSelector.defaultOption = newDefaultProfileOption;\n\n            prevDefaultProfileOption.text = prevDefaultProfileOption.text.replace('(Default) ', '');\n\n            Materialize.toast('Default Profile set!', toastTime);\n        }).catch(function (response:Blinds.IResponse) {\n            Materialize.toast('ERROR: ' + response.data.errorMessage, toastTime);\n            console.error(response);\n        });\n    }\n\n    /**\n     ************************************ INITIALIZE ************************************\n     */\n\n    (function () {\n        initElements();\n\n        initData();\n\n        initElementListeners();\n\n    })();\n}\n\n\n\n"],"sourceRoot":"/source/"}