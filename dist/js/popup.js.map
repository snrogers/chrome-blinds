{"version":3,"sources":["src/js/popup.ts"],"names":[],"mappings":"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","file":"popup.js","sourcesContent":["/**\r\n * Created by USER on 3/6/2016.\r\n */\r\nclass Toggle {\r\n    //  TODO: It would be nice to have Toggle figure out if it should be disabled on its own\r\n    private _element:HTMLInputElement;\r\n    private _state:boolean;\r\n    private _options:{[options:string]:string};\r\n\r\n    constructor(elementId:string, onChange:Function) {\r\n        this._element = <HTMLInputElement> document.getElementById(elementId);\r\n        this._element.addEventListener('change', <EventListener>onChange.bind(this, this._element));\r\n    }\r\n\r\n    set disabled(value:boolean) {\r\n        this._element.disabled = value;\r\n    }\r\n\r\n    set state(value:boolean) {\r\n        this._element.checked = value;\r\n    }\r\n}\r\nnamespace PopUp {\r\n    function isChanged(){\r\n        port.postMessage({isChanged: true})\r\n    }\r\n    \r\n    var port:chrome.runtime.Port;\r\n    // var isChanged:boolean = false;\r\n\r\n    var profiles:Blinds.Profile[];\r\n    var currentTab:chrome.tabs.Tab;\r\n    var toggleBlock:Toggle;\r\n\r\n    var selectProfile: HTMLSelectElement;\r\n\r\n    function initData() {\r\n        var deferred = Q.defer();\r\n        //  Get active TabID for future messages\r\n        Blinds.getActiveTab()\r\n            .then(function (tab:chrome.tabs.Tab) {\r\n                Blinds.debug('PopUp\\'s activeTabId:[' + tab.id + ']');\r\n                currentTab = tab;\r\n            })\r\n            //  Populate Profile Selector\r\n            .then(function () {\r\n                return Blinds.sendMessage({category: 'getProfiles'})\r\n            })\r\n            .then(function (response:Blinds.IResponse) {\r\n                var selectProfile = <HTMLSelectElement>document.getElementById('selectProfile');\r\n\r\n                for (var profileName in response.data.profiles) {\r\n                    if (Object.hasOwnProperty.call(response.data.profiles, profileName)) {\r\n                        var selectOption = document.createElement('option');\r\n                        selectOption.text = profileName;\r\n                        selectOption.value = profileName;\r\n                        if (profileName === response.data.activeProfileName) {\r\n                            selectOption.selected = true;\r\n                        }\r\n                        selectProfile.appendChild(selectOption);\r\n                    }\r\n                }\r\n            })\r\n            //  Configure Toggle\r\n            .then(function () {\r\n                Blinds.sendMessage({\r\n                        category: 'checkIfBlocked',\r\n                        data: {\r\n                            url: currentTab.url,\r\n                            windowId: currentTab.windowId\r\n                        }\r\n                    })\r\n                    .then(function (response:Blinds.IResponse) {\r\n                        toggleBlock = new Toggle('toggleBlock', function (element:HTMLInputElement) {\r\n                            if (element.disabled) return;\r\n\r\n                            if (element.checked) {\r\n                                Blinds.sendMessage({\r\n                                        category: 'removeSiteFromProfile',\r\n                                        data: {\r\n                                            url: currentTab.url, profileName: selectProfile.value //TODO: Make add/remove site function have same signature\r\n                                        }\r\n                                    })\r\n                                    .then(function (response:Blinds.IResponse) {\r\n                                        isChanged();\r\n                                        element.checked = true;\r\n                                    })\r\n                                    .catch(function (response:Blinds.IResponse) {\r\n                                        console.error(response);\r\n                                    });\r\n                            } else {\r\n                                Blinds.sendMessage({\r\n                                        category: 'addSiteToProfile',\r\n                                        data: {windowId: currentTab.windowId, profileName: selectProfile.value}\r\n                                    })\r\n                                    .then(function (response:Blinds.IResponse) {\r\n                                        isChanged();\r\n                                        element.checked = false;\r\n                                    })\r\n                                    .catch(function (response:Blinds.IResponse) {\r\n                                        console.error(response);\r\n                                    });\r\n                            }\r\n                        });\r\n                        toggleBlock.disabled = selectProfile.value === 'Unrestricted';\r\n                        toggleBlock.state = !response.data.isBlocked;\r\n                    })\r\n            })\r\n            .then(function () {\r\n                //  TODO: Figure out a way to prevent sliding on load without using this setTimeout\r\n                setTimeout(function(){\r\n                    (<HTMLElement>document.querySelector('.onoffswitch-switch')).style.transition = 'all 0.3s ease-in 0s';\r\n                    (<HTMLElement>document.querySelector('.onoffswitch-inner')).style.transition = 'margin 0.3s ease-in 0s';\r\n                },50);\r\n                deferred.resolve();\r\n            });\r\n        return deferred.promise;\r\n    }\r\n\r\n    function initListeners() {\r\n        var deferred = Q.defer();\r\n\r\n        //\tProfile Selector\r\n        selectProfile = <HTMLSelectElement>document.getElementById('selectProfile');\r\n        selectProfile.addEventListener('change', function () {\r\n            Blinds.sendMessage({\r\n                    category: 'setActiveProfile',\r\n                    data: {\r\n                        profileName: selectProfile.value\r\n                    }\r\n                })\r\n                .then(function (response:Blinds.IResponse) {\r\n                    isChanged();\r\n                    toggleBlock.disabled = response.data.activeProfileName === 'Unrestricted';\r\n                })\r\n                .then(function () {\r\n                    return Blinds.sendMessage({\r\n                        category: 'checkIfBlocked',\r\n                        data: {\r\n                            url: currentTab.url,\r\n                            windowId: currentTab.windowId\r\n                        }\r\n                    })\r\n                })\r\n                .then(function (response:Blinds.IResponse) {\r\n                    toggleBlock.state = !response.data.isBlocked;\r\n                }).then(function () {\r\n            });\r\n        });\r\n        deferred.resolve();\r\n        return deferred.promise;\r\n    }\r\n\r\n\r\n    /** INITIALIZE **/\r\n    (function () {\r\n        initData()\r\n            .then(initListeners)\r\n            .then(function () {\r\n                port = chrome.runtime.connect({name: currentTab.id.toString()});\r\n            });\r\n    })();\r\n}\r\n\r\n"],"sourceRoot":"/source/"}